1. What happens when you initialize a repository? Why do you need to do it?
	A .git file is created, which contains all the metadata of the repository files. Now all the changes to files in the repository can be tracked.
2. How is the staging area different from the working directory and the repository? What value do you think it offers?
	The staging area is a temporary 'holding cell' for files you want to add to a commit. The working directory and repository are storage that is permanent unless purposely deleted.
3. How can you use the staging area to make sure you have one commit per logical change?
	You can compare files in the staging area with those in the working directory and most recent commit to keep track of changes you make.
4. What are some situations when branches would be helpful in keeping your history organized? How would branches help?
	Branches would be helpful if you want to try making a version with an experimental feature, or if you want to make a version in another language, etc. It would help with organizing your history because all commits related to the experimental feature would be on the same branch, as would those with the alternate language version, etc.
5. How do the diagrams help you visualize the branch structure?
	By showing the parent of each commit and revealing which commits (if any) are unreachable.
6. What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
	All of the changes introduced in the new branch are now included in the master branch. The diagram shows that the commits from the other branch are still reachable, even if we delete that branch after merging (because deleting a branch deletes only its label, not the commits it contained).